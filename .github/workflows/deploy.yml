name: Deploy to Heroku

on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: install dependencias
        run: npm install

      - name: Run SonarQube analysis
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

#      - name: Set up Node.js
#       uses: actions/setup-node@v2
#        with:
#          node-version: '14'  # Ajusta la versión de Node.js según tu proyecto
#  
#      - name: Install dependencies
#        run: npm install
#
#      - name: Run SonarQube analysis
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Añade tu token de SonarQube como un secreto en GitHub
#        run: |
#          npx sonar-scanner \
#            -Dsonar.projectKey=your_project_key \
#            -Dsonar.organization=your_organization \
#            -Dsonar.sources=. \
#            -Dsonar.host.url=https://sonarcloud.io \
#            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      
      - name: Login to Heroku Container Registry
        run: echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com

      - name: Build and push Docker image to Heroku
        run: |
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Release Docker image on Heroku
        run: heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
