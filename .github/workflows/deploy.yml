name: Deploy to Heroku and app-vulnerable by test ekohackademy

on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: install dependencias
        run: npm install

              
      - name: Run Sonar cloud analysis
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: OWASP Dependency-Check
        run: |
          docker run --rm \
          -v $(pwd):/src \
          -v $(pwd)/odc-data:/usr/share/dependency-check/data \
          -v $(pwd)/odc-reports:/report \
          owasp/dependency-check \
          --format "HTML" \
          --project "vulnerable-web-app" \
          --scan /src
        
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Upload OWASP Dependency-Check Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
            name: OWASP Dependency-Check report
            path: dependency-check-report/*.html

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'https://fernandomartinserrano-592ac9e9328f.herokuapp.com/'
          #rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Upload ZAP Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ZAP report
          path: report_html.html
          

      - name: Login to Heroku Container Registry
        run: echo ${{ secrets.HEROKU_API_KEY }} | docker login --username=_ --password-stdin registry.heroku.com

      - name: Build and push Docker image to Heroku
        run: |
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

      - name: Release Docker image on Heroku
        run: heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }} 
          
      - name: Clean up
        run: docker rmi registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

          
